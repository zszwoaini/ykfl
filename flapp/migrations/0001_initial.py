# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2019-07-17 16:18
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Active',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='活动名字')),
                ('browse', models.IntegerField(default=0, verbose_name='浏览量')),
                ('collection', models.IntegerField(default=0, verbose_name='收藏数')),
                ('end_time', models.DateTimeField(auto_now_add=True, verbose_name='报名截止时间')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='活动创建时间')),
                ('start_time', models.DateTimeField(auto_now_add=True, verbose_name='活动开始时间')),
                ('active_address', models.CharField(max_length=200, verbose_name='活动地址')),
                ('lat', models.DecimalField(decimal_places=15, max_digits=30, null=True, verbose_name='纬度')),
                ('lng', models.DecimalField(decimal_places=15, max_digits=30, null=True, verbose_name='经度')),
                ('active_detail', models.CharField(max_length=200, verbose_name='活动详情')),
                ('join_num', models.IntegerField(default=0, verbose_name='活动参加人数')),
                ('contacts', models.CharField(max_length=20, verbose_name='活动联系人')),
                ('phone', models.CharField(max_length=11, verbose_name='联系人电话')),
                ('active_quota', models.IntegerField(verbose_name='活动名额')),
            ],
            options={
                'verbose_name': '报名活动表',
                'verbose_name_plural': '报名活动表',
            },
        ),
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='区域名')),
            ],
            options={
                'verbose_name': '行政区域',
                'verbose_name_plural': '行政区域',
            },
        ),
        migrations.CreateModel(
            name='Balance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('money', models.IntegerField(default=0, verbose_name='积分余额')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='用户余额更新时间')),
            ],
            options={
                'verbose_name': '余额积分表',
                'verbose_name_plural': '余额积分表',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='评论')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='是否合格')),
                ('active', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flapp.Active')),
            ],
            options={
                'verbose_name': '评论',
                'verbose_name_plural': '评论',
            },
        ),
        migrations.CreateModel(
            name='Cootile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coolltion_status', models.IntegerField(choices=[(1, '没收藏'), (2, '已收藏')], default=1, verbose_name='是否收藏')),
                ('active', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flapp.Active')),
            ],
            options={
                'verbose_name': '我的收藏',
                'verbose_name_plural': '我的收藏',
            },
        ),
        migrations.CreateModel(
            name='FloorImg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imags', models.ImageField(upload_to='floo/', verbose_name='轮播图')),
                ('url', models.URLField(blank=True, null=True, verbose_name='详情链接')),
            ],
            options={
                'verbose_name': '轮播图',
                'verbose_name_plural': '轮播图',
            },
        ),
        migrations.CreateModel(
            name='Foodactive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(auto_now_add=True, verbose_name='报名时间')),
                ('title', models.CharField(max_length=200, verbose_name='报名形式')),
                ('b_know', models.TextField(verbose_name='报名须知')),
                ('sure', models.TextField(verbose_name='确定对象')),
            ],
            options={
                'verbose_name': '资讯',
                'verbose_name_plural': '资讯',
            },
        ),
        migrations.CreateModel(
            name='Foodtype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='分类')),
            ],
            options={
                'verbose_name': '分类',
                'verbose_name_plural': '分类',
            },
        ),
        migrations.CreateModel(
            name='Ftypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='美食')),
                ('foodtype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flapp.Foodtype', verbose_name='分类')),
            ],
            options={
                'verbose_name': '美食',
                'verbose_name_plural': '美食',
            },
        ),
        migrations.CreateModel(
            name='Good',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goodimage', models.ImageField(upload_to='good/', verbose_name='商品图片')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='商品创建时间')),
                ('term_validity', models.IntegerField(verbose_name='领奖商品有效期')),
                ('name', models.CharField(max_length=100, verbose_name='商品名字')),
                ('price', models.IntegerField(verbose_name='价格')),
                ('sales', models.IntegerField(default=0, verbose_name='销量')),
                ('stock', models.IntegerField(verbose_name='库存')),
                ('gooddetail', models.CharField(max_length=200, verbose_name='商品详情')),
            ],
            options={
                'verbose_name': '商品',
                'verbose_name_plural': '商品',
            },
        ),
        migrations.CreateModel(
            name='GoodType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='商品分类名')),
                ('typeimg', models.ImageField(upload_to='goodtype/', verbose_name='分类图标')),
            ],
            options={
                'verbose_name': '商品分类',
                'verbose_name_plural': '商品分类',
            },
        ),
        migrations.CreateModel(
            name='Information',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='标题')),
                ('content', models.TextField(blank=True, verbose_name='资讯内容')),
                ('url', models.URLField(blank=True, verbose_name='资讯链接')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('browse', models.IntegerField(default=0, verbose_name='浏览量')),
            ],
            options={
                'verbose_name': '资讯',
                'verbose_name_plural': '资讯',
            },
        ),
        migrations.CreateModel(
            name='Lbimage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='floo/', verbose_name='轮播图')),
                ('url', models.URLField(blank=True, null=True, verbose_name='详情链接')),
            ],
            options={
                'verbose_name': '轮播图',
                'verbose_name_plural': '轮播图',
            },
        ),
        migrations.CreateModel(
            name='Messg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=100, verbose_name='消息')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': '系统消息',
                'verbose_name_plural': '系统消息',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordercard', models.CharField(max_length=100, verbose_name='下单号')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('status', models.IntegerField(choices=[(2, '已兑换'), (1, '待兑换'), (3, '已失效')], default=1, verbose_name='审核状态')),
                ('goods', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flapp.Good', verbose_name='商品')),
            ],
            options={
                'verbose_name': '兑换记录表',
                'verbose_name_plural': '兑换记录表',
            },
        ),
        migrations.CreateModel(
            name='Payoder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('pay_status', models.IntegerField(choices=[(1, '已扫码'), (2, '待扫码'), (3, '已过期')], default=1, verbose_name='扫码状态')),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='flapp.Order')),
            ],
            options={
                'verbose_name': '领取状态',
                'verbose_name_plural': '领取状态',
            },
        ),
        migrations.CreateModel(
            name='Rtask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(blank=True, verbose_name='文章内容')),
                ('title', models.CharField(max_length=100, verbose_name='文章标题')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('complete_num', models.IntegerField(default=0, verbose_name='阅读量')),
                ('end_time', models.DateTimeField(verbose_name='结束时间')),
                ('score_num', models.IntegerField(default=0, verbose_name='阅读给与积分数')),
                ('share_give_money', models.IntegerField(default=0, verbose_name='分享成功所得积分')),
                ('task_detail', models.CharField(max_length=100, verbose_name='活动规则')),
                ('detail_url', models.CharField(blank=True, max_length=255, verbose_name='详情页跳转')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否活跃')),
                ('icon', models.ImageField(upload_to='task/', verbose_name='图片')),
            ],
            options={
                'verbose_name': '活动表',
                'verbose_name_plural': '活动表',
            },
        ),
        migrations.CreateModel(
            name='Scoredetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('msg', models.CharField(max_length=200)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('money', models.IntegerField(default=0, verbose_name='获取积分数')),
            ],
            options={
                'verbose_name': '积分消息',
                'verbose_name_plural': '积分消息',
            },
        ),
        migrations.CreateModel(
            name='Sign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
                ('sing_count', models.IntegerField(default=0, verbose_name='签到总次数')),
                ('singdays', models.IntegerField(default=0, verbose_name='连续签到多少天')),
            ],
            options={
                'verbose_name': '用户签到表',
                'verbose_name_plural': '用户签到表',
            },
        ),
        migrations.CreateModel(
            name='Signdetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sign_money', models.IntegerField(default=0, verbose_name='每次签到获取积分')),
                ('one_money', models.IntegerField(default=0, verbose_name='首次签到获取积分')),
                ('x_money', models.IntegerField(default=0, verbose_name='连续签到多少天后每次获取积分')),
                ('days', models.IntegerField(default=0, verbose_name='连续签到天数')),
            ],
            options={
                'verbose_name': '签到积分规则',
                'verbose_name_plural': '签到积分规则',
            },
        ),
        migrations.CreateModel(
            name='Sponsor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='组织名')),
                ('fans_num', models.IntegerField(default=0, verbose_name='粉丝数')),
                ('spons_detail', models.CharField(max_length=200, verbose_name='主办方介绍')),
                ('active_num', models.IntegerField(default=0, verbose_name='创建活动数量')),
                ('adress', models.CharField(max_length=200, verbose_name='主办方地址')),
                ('phone', models.CharField(max_length=11, verbose_name='主办方电话')),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flapp.Area', verbose_name='主办方所属区域')),
            ],
            options={
                'verbose_name': '组织',
                'verbose_name_plural': '组织',
            },
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme_title', models.CharField(max_length=100, verbose_name='标题')),
                ('theme_image', models.ImageField(upload_to='theme/', verbose_name='图签')),
                ('url', models.URLField(blank=True, verbose_name='文本链接')),
                ('content', models.TextField(blank=True, verbose_name='文本内容')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('browse', models.IntegerField(default=0, verbose_name='浏览量')),
            ],
            options={
                'verbose_name': '主题',
                'verbose_name_plural': '主题',
            },
        ),
        migrations.CreateModel(
            name='Themetypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='主题分类名')),
                ('images', models.ImageField(upload_to='theme/', verbose_name='主题图标')),
                ('list_image', models.ImageField(upload_to='theme/', verbose_name='主题列表首页图')),
            ],
            options={
                'verbose_name': '主题分类',
                'verbose_name_plural': '主题分类',
            },
        ),
        migrations.CreateModel(
            name='Uicon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(upload_to='up/', verbose_name='证件')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('openid', models.CharField(max_length=100)),
                ('icon', models.ImageField(max_length=1000, upload_to='png')),
                ('rname', models.CharField(max_length=20, verbose_name='真实姓名')),
                ('nickname', models.CharField(max_length=100, unique=True, verbose_name='昵称')),
                ('phone', models.CharField(max_length=13)),
                ('qq', models.CharField(max_length=20, verbose_name='QQ号')),
                ('address', models.CharField(max_length=100, verbose_name='地址')),
                ('sex', models.CharField(max_length=10, verbose_name='性别')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
            },
        ),
        migrations.CreateModel(
            name='Useractive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_up', models.BooleanField(default=False)),
                ('active', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flapp.Active')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flapp.User')),
            ],
            options={
                'verbose_name': '我的报名活动',
                'verbose_name_plural': '我的报名活动',
            },
        ),
        migrations.CreateModel(
            name='UserEnroll',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('store', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(max_length=30, verbose_name='法人代表名')),
                ('ucard', models.CharField(max_length=30, unique=True, verbose_name='身份证')),
                ('phone', models.CharField(max_length=11, unique=True)),
                ('type', models.CharField(max_length=20, verbose_name='美食')),
                ('typeone', models.CharField(blank=True, max_length=20, null=True, verbose_name='美食')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='单价')),
                ('foodtype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='types', to='flapp.Foodtype', verbose_name='类别')),
                ('foodtypeone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='flapp.Foodtype', verbose_name='类别')),
                ('store_area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='flapp.Area')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flapp.User', verbose_name='用户')),
            ],
            options={
                'verbose_name': '报名表',
                'verbose_name_plural': '报名表',
            },
        ),
        migrations.CreateModel(
            name='Usergood',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flapp.User')),
            ],
        ),
        migrations.CreateModel(
            name='Userinfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coment', models.TextField()),
                ('information', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flapp.Information')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flapp.User')),
            ],
            options={
                'verbose_name': '我的资讯评论',
                'verbose_name_plural': '我的资讯评论',
            },
        ),
        migrations.CreateModel(
            name='UserRtaskLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('integral', models.IntegerField(verbose_name='当时所获积分')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='参加时间')),
                ('type', models.CharField(choices=[('join', '参加阅读'), ('share', '分享获得')], max_length=10, verbose_name='奖励来源')),
                ('rtask', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flapp.Rtask')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flapp.User')),
            ],
            options={
                'verbose_name': '用户获取积分记录表',
                'verbose_name_plural': '用户获取积分记录表',
            },
        ),
        migrations.CreateModel(
            name='Usersponsor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sponsor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flapp.Sponsor')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flapp.User')),
            ],
            options={
                'verbose_name': '我的组织',
            },
        ),
        migrations.CreateModel(
            name='Usertheme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coment', models.TextField()),
                ('theme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flapp.Theme')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flapp.User')),
            ],
            options={
                'verbose_name': '我的主题评论',
                'verbose_name_plural': '我的主题评论',
            },
        ),
        migrations.CreateModel(
            name='Voteactive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='投票活动标题')),
                ('browse', models.IntegerField(default=0, verbose_name='浏览量')),
                ('people_num', models.IntegerField(default=0, verbose_name='参与人数')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(auto_now_add=True, verbose_name='结束时间')),
                ('vot_rule', models.CharField(max_length=200, verbose_name='投票规则')),
                ('vote_detail', models.CharField(max_length=200, verbose_name='活动介绍')),
                ('sponsor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flapp.Sponsor')),
            ],
            options={
                'verbose_name': '投票活动',
                'verbose_name_plural': '投票活动',
            },
        ),
        migrations.CreateModel(
            name='Votegood',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vote_num', models.IntegerField(default=0, verbose_name='投票数量')),
                ('goodimage', models.ImageField(upload_to='votegood/', verbose_name='图片')),
                ('name', models.CharField(max_length=30, verbose_name='名字')),
                ('store', models.CharField(max_length=100, verbose_name='店家')),
                ('voteactive', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flapp.Voteactive')),
            ],
            options={
                'verbose_name': '投票商品',
                'verbose_name_plural': '投票商品',
            },
        ),
        migrations.AddField(
            model_name='usergood',
            name='voteactive',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flapp.Voteactive'),
        ),
        migrations.AddField(
            model_name='uicon',
            name='userenroll',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flapp.UserEnroll'),
        ),
        migrations.AddField(
            model_name='theme',
            name='theme',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flapp.Themetypes'),
        ),
        migrations.AddField(
            model_name='sign',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flapp.User', verbose_name='用户'),
        ),
        migrations.AddField(
            model_name='scoredetail',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flapp.User'),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flapp.User', verbose_name='用户'),
        ),
        migrations.AddField(
            model_name='messg',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flapp.User'),
        ),
        migrations.AddField(
            model_name='information',
            name='sponsor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flapp.Sponsor'),
        ),
        migrations.AddField(
            model_name='good',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flapp.GoodType', verbose_name='商品分类'),
        ),
        migrations.AddField(
            model_name='cootile',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flapp.User'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flapp.User'),
        ),
        migrations.AddField(
            model_name='balance',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='flapp.User', verbose_name='用户'),
        ),
        migrations.AddField(
            model_name='active',
            name='sponsor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flapp.Sponsor', verbose_name='主办方'),
        ),
    ]
